{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useLexicalEditable } from '@lexical/react/useLexicalEditable';\nimport { $canShowPlaceholderCurry } from '@lexical/text';\nimport { mergeRegister } from '@lexical/utils';\nimport { useLayoutEffect, useEffect, useState, useMemo, Suspense } from 'react';\nimport { flushSync, createPortal } from 'react-dom';\nimport { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { registerDragonSupport } from '@lexical/dragon';\nimport { registerRichText } from '@lexical/rich-text';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// This workaround is no longer necessary in React 19,\n// but we currently support React >=17.x\n// https://github.com/facebook/react/pull/26395\nconst useLayoutEffectImpl = CAN_USE_DOM ? useLayoutEffect : useEffect;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction canShowPlaceholderFromCurrentEditorState(editor) {\n  const currentCanShowPlaceholder = editor.getEditorState().read($canShowPlaceholderCurry(editor.isComposing()));\n  return currentCanShowPlaceholder;\n}\nfunction useCanShowPlaceholder(editor) {\n  const [canShowPlaceholder, setCanShowPlaceholder] = useState(() => canShowPlaceholderFromCurrentEditorState(editor));\n  useLayoutEffectImpl(() => {\n    function resetCanShowPlaceholder() {\n      const currentCanShowPlaceholder = canShowPlaceholderFromCurrentEditorState(editor);\n      setCanShowPlaceholder(currentCanShowPlaceholder);\n    }\n    resetCanShowPlaceholder();\n    return mergeRegister(editor.registerUpdateListener(() => {\n      resetCanShowPlaceholder();\n    }), editor.registerEditableListener(() => {\n      resetCanShowPlaceholder();\n    }));\n  }, [editor]);\n  return canShowPlaceholder;\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction useDecorators(editor, ErrorBoundary) {\n  const [decorators, setDecorators] = useState(() => editor.getDecorators());\n\n  // Subscribe to changes\n  useLayoutEffectImpl(() => {\n    return editor.registerDecoratorListener(nextDecorators => {\n      flushSync(() => {\n        setDecorators(nextDecorators);\n      });\n    });\n  }, [editor]);\n  useEffect(() => {\n    // If the content editable mounts before the subscription is added, then\n    // nothing will be rendered on initial pass. We can get around that by\n    // ensuring that we set the value.\n    setDecorators(editor.getDecorators());\n  }, [editor]);\n\n  // Return decorators defined as React Portals\n  return useMemo(() => {\n    const decoratedPortals = [];\n    const decoratorKeys = Object.keys(decorators);\n    for (let i = 0; i < decoratorKeys.length; i++) {\n      const nodeKey = decoratorKeys[i];\n      const reactDecorator = /*#__PURE__*/jsx(ErrorBoundary, {\n        onError: e => editor._onError(e),\n        children: /*#__PURE__*/jsx(Suspense, {\n          fallback: null,\n          children: decorators[nodeKey]\n        })\n      });\n      const element = editor.getElementByKey(nodeKey);\n      if (element !== null) {\n        decoratedPortals.push( /*#__PURE__*/createPortal(reactDecorator, element, nodeKey));\n      }\n    }\n    return decoratedPortals;\n  }, [ErrorBoundary, decorators, editor]);\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction useRichTextSetup(editor) {\n  useLayoutEffectImpl(() => {\n    return mergeRegister(registerRichText(editor), registerDragonSupport(editor));\n\n    // We only do this for init\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editor]);\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction RichTextPlugin({\n  contentEditable,\n  placeholder,\n  ErrorBoundary\n}) {\n  const [editor] = useLexicalComposerContext();\n  const decorators = useDecorators(editor, ErrorBoundary);\n  useRichTextSetup(editor);\n  return /*#__PURE__*/jsxs(Fragment, {\n    children: [contentEditable, /*#__PURE__*/jsx(Placeholder, {\n      content: placeholder\n    }), decorators]\n  });\n}\nfunction Placeholder({\n  content\n}) {\n  const [editor] = useLexicalComposerContext();\n  const showPlaceholder = useCanShowPlaceholder(editor);\n  const editable = useLexicalEditable();\n  if (!showPlaceholder) {\n    return null;\n  }\n  if (typeof content === 'function') {\n    return content(editable);\n  } else {\n    return content;\n  }\n}\nexport { RichTextPlugin };","map":{"version":3,"names":["useLexicalComposerContext","useLexicalEditable","$canShowPlaceholderCurry","mergeRegister","useLayoutEffect","useEffect","useState","useMemo","Suspense","flushSync","createPortal","jsx","jsxs","Fragment","registerDragonSupport","registerRichText","CAN_USE_DOM","window","document","createElement","useLayoutEffectImpl","canShowPlaceholderFromCurrentEditorState","editor","currentCanShowPlaceholder","getEditorState","read","isComposing","useCanShowPlaceholder","canShowPlaceholder","setCanShowPlaceholder","resetCanShowPlaceholder","registerUpdateListener","registerEditableListener","useDecorators","ErrorBoundary","decorators","setDecorators","getDecorators","registerDecoratorListener","nextDecorators","decoratedPortals","decoratorKeys","Object","keys","i","length","nodeKey","reactDecorator","onError","e","_onError","children","fallback","element","getElementByKey","push","useRichTextSetup","RichTextPlugin","contentEditable","placeholder","Placeholder","content","showPlaceholder","editable"],"sources":["C:/Users/BIT1/IdeaProjects/customer-inquiry-system/frontend/node_modules/@lexical/react/LexicalRichTextPlugin.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useLexicalEditable } from '@lexical/react/useLexicalEditable';\nimport { $canShowPlaceholderCurry } from '@lexical/text';\nimport { mergeRegister } from '@lexical/utils';\nimport { useLayoutEffect, useEffect, useState, useMemo, Suspense } from 'react';\nimport { flushSync, createPortal } from 'react-dom';\nimport { jsx, jsxs, Fragment } from 'react/jsx-runtime';\nimport { registerDragonSupport } from '@lexical/dragon';\nimport { registerRichText } from '@lexical/rich-text';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n// This workaround is no longer necessary in React 19,\n// but we currently support React >=17.x\n// https://github.com/facebook/react/pull/26395\nconst useLayoutEffectImpl = CAN_USE_DOM ? useLayoutEffect : useEffect;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction canShowPlaceholderFromCurrentEditorState(editor) {\n  const currentCanShowPlaceholder = editor.getEditorState().read($canShowPlaceholderCurry(editor.isComposing()));\n  return currentCanShowPlaceholder;\n}\nfunction useCanShowPlaceholder(editor) {\n  const [canShowPlaceholder, setCanShowPlaceholder] = useState(() => canShowPlaceholderFromCurrentEditorState(editor));\n  useLayoutEffectImpl(() => {\n    function resetCanShowPlaceholder() {\n      const currentCanShowPlaceholder = canShowPlaceholderFromCurrentEditorState(editor);\n      setCanShowPlaceholder(currentCanShowPlaceholder);\n    }\n    resetCanShowPlaceholder();\n    return mergeRegister(editor.registerUpdateListener(() => {\n      resetCanShowPlaceholder();\n    }), editor.registerEditableListener(() => {\n      resetCanShowPlaceholder();\n    }));\n  }, [editor]);\n  return canShowPlaceholder;\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction useDecorators(editor, ErrorBoundary) {\n  const [decorators, setDecorators] = useState(() => editor.getDecorators());\n\n  // Subscribe to changes\n  useLayoutEffectImpl(() => {\n    return editor.registerDecoratorListener(nextDecorators => {\n      flushSync(() => {\n        setDecorators(nextDecorators);\n      });\n    });\n  }, [editor]);\n  useEffect(() => {\n    // If the content editable mounts before the subscription is added, then\n    // nothing will be rendered on initial pass. We can get around that by\n    // ensuring that we set the value.\n    setDecorators(editor.getDecorators());\n  }, [editor]);\n\n  // Return decorators defined as React Portals\n  return useMemo(() => {\n    const decoratedPortals = [];\n    const decoratorKeys = Object.keys(decorators);\n    for (let i = 0; i < decoratorKeys.length; i++) {\n      const nodeKey = decoratorKeys[i];\n      const reactDecorator = /*#__PURE__*/jsx(ErrorBoundary, {\n        onError: e => editor._onError(e),\n        children: /*#__PURE__*/jsx(Suspense, {\n          fallback: null,\n          children: decorators[nodeKey]\n        })\n      });\n      const element = editor.getElementByKey(nodeKey);\n      if (element !== null) {\n        decoratedPortals.push( /*#__PURE__*/createPortal(reactDecorator, element, nodeKey));\n      }\n    }\n    return decoratedPortals;\n  }, [ErrorBoundary, decorators, editor]);\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction useRichTextSetup(editor) {\n  useLayoutEffectImpl(() => {\n    return mergeRegister(registerRichText(editor), registerDragonSupport(editor));\n\n    // We only do this for init\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [editor]);\n}\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction RichTextPlugin({\n  contentEditable,\n  placeholder,\n  ErrorBoundary\n}) {\n  const [editor] = useLexicalComposerContext();\n  const decorators = useDecorators(editor, ErrorBoundary);\n  useRichTextSetup(editor);\n  return /*#__PURE__*/jsxs(Fragment, {\n    children: [contentEditable, /*#__PURE__*/jsx(Placeholder, {\n      content: placeholder\n    }), decorators]\n  });\n}\nfunction Placeholder({\n  content\n}) {\n  const [editor] = useLexicalComposerContext();\n  const showPlaceholder = useCanShowPlaceholder(editor);\n  const editable = useLexicalEditable();\n  if (!showPlaceholder) {\n    return null;\n  }\n  if (typeof content === 'function') {\n    return content(editable);\n  } else {\n    return content;\n  }\n}\n\nexport { RichTextPlugin };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}