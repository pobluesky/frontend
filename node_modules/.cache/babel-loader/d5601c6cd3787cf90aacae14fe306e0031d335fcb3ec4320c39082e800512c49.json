{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useLayoutEffect, useEffect, useState, useCallback } from 'react';\nimport { jsx } from 'react/jsx-runtime';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// This workaround is no longer necessary in React 19,\n// but we currently support React >=17.x\n// https://github.com/facebook/react/pull/26395\nconst useLayoutEffectImpl = CAN_USE_DOM ? useLayoutEffect : useEffect;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction ContentEditable({\n  ariaActiveDescendant,\n  ariaAutoComplete,\n  ariaControls,\n  ariaDescribedBy,\n  ariaExpanded,\n  ariaLabel,\n  ariaLabelledBy,\n  ariaMultiline,\n  ariaOwns,\n  ariaRequired,\n  autoCapitalize,\n  className,\n  id,\n  role = 'textbox',\n  spellCheck = true,\n  style,\n  tabIndex,\n  'data-testid': testid,\n  ...rest\n}) {\n  const [editor] = useLexicalComposerContext();\n  const [isEditable, setEditable] = useState(false);\n  const ref = useCallback(rootElement => {\n    // defaultView is required for a root element.\n    // In multi-window setups, the defaultView may not exist at certain points.\n    if (rootElement && rootElement.ownerDocument && rootElement.ownerDocument.defaultView) {\n      editor.setRootElement(rootElement);\n    }\n  }, [editor]);\n  useLayoutEffectImpl(() => {\n    setEditable(editor.isEditable());\n    return editor.registerEditableListener(currentIsEditable => {\n      setEditable(currentIsEditable);\n    });\n  }, [editor]);\n  return /*#__PURE__*/jsx(\"div\", {\n    ...rest,\n    \"aria-activedescendant\": !isEditable ? undefined : ariaActiveDescendant,\n    \"aria-autocomplete\": !isEditable ? 'none' : ariaAutoComplete,\n    \"aria-controls\": !isEditable ? undefined : ariaControls,\n    \"aria-describedby\": ariaDescribedBy,\n    \"aria-expanded\": !isEditable ? undefined : role === 'combobox' ? !!ariaExpanded : undefined,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-multiline\": ariaMultiline,\n    \"aria-owns\": !isEditable ? undefined : ariaOwns,\n    \"aria-readonly\": !isEditable ? true : undefined,\n    \"aria-required\": ariaRequired,\n    autoCapitalize: autoCapitalize,\n    className: className,\n    contentEditable: isEditable,\n    \"data-testid\": testid,\n    id: id,\n    ref: ref,\n    role: role,\n    spellCheck: spellCheck,\n    style: style,\n    tabIndex: tabIndex\n  });\n}\nexport { ContentEditable };","map":{"version":3,"names":["useLexicalComposerContext","useLayoutEffect","useEffect","useState","useCallback","jsx","CAN_USE_DOM","window","document","createElement","useLayoutEffectImpl","ContentEditable","ariaActiveDescendant","ariaAutoComplete","ariaControls","ariaDescribedBy","ariaExpanded","ariaLabel","ariaLabelledBy","ariaMultiline","ariaOwns","ariaRequired","autoCapitalize","className","id","role","spellCheck","style","tabIndex","testid","rest","editor","isEditable","setEditable","ref","rootElement","ownerDocument","defaultView","setRootElement","registerEditableListener","currentIsEditable","undefined","contentEditable"],"sources":["C:/Users/BIT1/IdeaProjects/customer-inquiry-system/frontend/node_modules/@lexical/react/LexicalContentEditable.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useLayoutEffect, useEffect, useState, useCallback } from 'react';\nimport { jsx } from 'react/jsx-runtime';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n// This workaround is no longer necessary in React 19,\n// but we currently support React >=17.x\n// https://github.com/facebook/react/pull/26395\nconst useLayoutEffectImpl = CAN_USE_DOM ? useLayoutEffect : useEffect;\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction ContentEditable({\n  ariaActiveDescendant,\n  ariaAutoComplete,\n  ariaControls,\n  ariaDescribedBy,\n  ariaExpanded,\n  ariaLabel,\n  ariaLabelledBy,\n  ariaMultiline,\n  ariaOwns,\n  ariaRequired,\n  autoCapitalize,\n  className,\n  id,\n  role = 'textbox',\n  spellCheck = true,\n  style,\n  tabIndex,\n  'data-testid': testid,\n  ...rest\n}) {\n  const [editor] = useLexicalComposerContext();\n  const [isEditable, setEditable] = useState(false);\n  const ref = useCallback(rootElement => {\n    // defaultView is required for a root element.\n    // In multi-window setups, the defaultView may not exist at certain points.\n    if (rootElement && rootElement.ownerDocument && rootElement.ownerDocument.defaultView) {\n      editor.setRootElement(rootElement);\n    }\n  }, [editor]);\n  useLayoutEffectImpl(() => {\n    setEditable(editor.isEditable());\n    return editor.registerEditableListener(currentIsEditable => {\n      setEditable(currentIsEditable);\n    });\n  }, [editor]);\n  return /*#__PURE__*/jsx(\"div\", {\n    ...rest,\n    \"aria-activedescendant\": !isEditable ? undefined : ariaActiveDescendant,\n    \"aria-autocomplete\": !isEditable ? 'none' : ariaAutoComplete,\n    \"aria-controls\": !isEditable ? undefined : ariaControls,\n    \"aria-describedby\": ariaDescribedBy,\n    \"aria-expanded\": !isEditable ? undefined : role === 'combobox' ? !!ariaExpanded : undefined,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-multiline\": ariaMultiline,\n    \"aria-owns\": !isEditable ? undefined : ariaOwns,\n    \"aria-readonly\": !isEditable ? true : undefined,\n    \"aria-required\": ariaRequired,\n    autoCapitalize: autoCapitalize,\n    className: className,\n    contentEditable: isEditable,\n    \"data-testid\": testid,\n    id: id,\n    ref: ref,\n    role: role,\n    spellCheck: spellCheck,\n    style: style,\n    tabIndex: tabIndex\n  });\n}\n\nexport { ContentEditable };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}