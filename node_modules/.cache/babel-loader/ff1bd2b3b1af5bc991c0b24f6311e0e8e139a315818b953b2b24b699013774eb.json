{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { createContext, useContext } from 'react';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst LexicalComposerContext = /*#__PURE__*/createContext(null);\nfunction createLexicalComposerContext(parent, theme) {\n  let parentContext = null;\n  if (parent != null) {\n    parentContext = parent[1];\n  }\n  function getTheme() {\n    if (theme != null) {\n      return theme;\n    }\n    return parentContext != null ? parentContext.getTheme() : null;\n  }\n  return {\n    getTheme\n  };\n}\nfunction useLexicalComposerContext() {\n  const composerContext = useContext(LexicalComposerContext);\n  if (composerContext == null) {\n    {\n      throw Error(`LexicalComposerContext.useLexicalComposerContext: cannot find a LexicalComposerContext`);\n    }\n  }\n  return composerContext;\n}\nexport { LexicalComposerContext, createLexicalComposerContext, useLexicalComposerContext };","map":{"version":3,"names":["createContext","useContext","LexicalComposerContext","createLexicalComposerContext","parent","theme","parentContext","getTheme","useLexicalComposerContext","composerContext","Error"],"sources":["C:/Users/BIT1/IdeaProjects/customer-inquiry-system/frontend/node_modules/@lexical/react/LexicalComposerContext.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { createContext, useContext } from 'react';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nconst LexicalComposerContext = /*#__PURE__*/createContext(null);\nfunction createLexicalComposerContext(parent, theme) {\n  let parentContext = null;\n  if (parent != null) {\n    parentContext = parent[1];\n  }\n  function getTheme() {\n    if (theme != null) {\n      return theme;\n    }\n    return parentContext != null ? parentContext.getTheme() : null;\n  }\n  return {\n    getTheme\n  };\n}\nfunction useLexicalComposerContext() {\n  const composerContext = useContext(LexicalComposerContext);\n  if (composerContext == null) {\n    {\n      throw Error(`LexicalComposerContext.useLexicalComposerContext: cannot find a LexicalComposerContext`);\n    }\n  }\n  return composerContext;\n}\n\nexport { LexicalComposerContext, createLexicalComposerContext, useLexicalComposerContext };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,sBAAsB,GAAG,aAAaF,aAAa,CAAC,IAAI,CAAC;AAC/D,SAASG,4BAA4BA,CAACC,MAAM,EAAEC,KAAK,EAAE;EACnD,IAAIC,aAAa,GAAG,IAAI;EACxB,IAAIF,MAAM,IAAI,IAAI,EAAE;IAClBE,aAAa,GAAGF,MAAM,CAAC,CAAC,CAAC;EAC3B;EACA,SAASG,QAAQA,CAAA,EAAG;IAClB,IAAIF,KAAK,IAAI,IAAI,EAAE;MACjB,OAAOA,KAAK;IACd;IACA,OAAOC,aAAa,IAAI,IAAI,GAAGA,aAAa,CAACC,QAAQ,CAAC,CAAC,GAAG,IAAI;EAChE;EACA,OAAO;IACLA;EACF,CAAC;AACH;AACA,SAASC,yBAAyBA,CAAA,EAAG;EACnC,MAAMC,eAAe,GAAGR,UAAU,CAACC,sBAAsB,CAAC;EAC1D,IAAIO,eAAe,IAAI,IAAI,EAAE;IAC3B;MACE,MAAMC,KAAK,CAAC,wFAAwF,CAAC;IACvG;EACF;EACA,OAAOD,eAAe;AACxB;AAEA,SAASP,sBAAsB,EAAEC,4BAA4B,EAAEK,yBAAyB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}