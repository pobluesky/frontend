{"ast":null,"code":"/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useEffect } from 'react';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction AutoFocusPlugin({\n  defaultSelection\n}) {\n  const [editor] = useLexicalComposerContext();\n  useEffect(() => {\n    editor.focus(() => {\n      // If we try and move selection to the same point with setBaseAndExtent, it won't\n      // trigger a re-focus on the element. So in the case this occurs, we'll need to correct it.\n      // Normally this is fine, Selection API !== Focus API, but fore the intents of the naming\n      // of this plugin, which should preserve focus too.\n      const activeElement = document.activeElement;\n      const rootElement = editor.getRootElement();\n      if (rootElement !== null && (activeElement === null || !rootElement.contains(activeElement))) {\n        // Note: preventScroll won't work in Webkit.\n        rootElement.focus({\n          preventScroll: true\n        });\n      }\n    }, {\n      defaultSelection\n    });\n  }, [defaultSelection, editor]);\n  return null;\n}\nexport { AutoFocusPlugin };","map":{"version":3,"names":["useLexicalComposerContext","useEffect","AutoFocusPlugin","defaultSelection","editor","focus","activeElement","document","rootElement","getRootElement","contains","preventScroll"],"sources":["C:/Users/BIT1/IdeaProjects/customer-inquiry-system/frontend/node_modules/@lexical/react/LexicalAutoFocusPlugin.dev.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useEffect } from 'react';\n\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nfunction AutoFocusPlugin({\n  defaultSelection\n}) {\n  const [editor] = useLexicalComposerContext();\n  useEffect(() => {\n    editor.focus(() => {\n      // If we try and move selection to the same point with setBaseAndExtent, it won't\n      // trigger a re-focus on the element. So in the case this occurs, we'll need to correct it.\n      // Normally this is fine, Selection API !== Focus API, but fore the intents of the naming\n      // of this plugin, which should preserve focus too.\n      const activeElement = document.activeElement;\n      const rootElement = editor.getRootElement();\n      if (rootElement !== null && (activeElement === null || !rootElement.contains(activeElement))) {\n        // Note: preventScroll won't work in Webkit.\n        rootElement.focus({\n          preventScroll: true\n        });\n      }\n    }, {\n      defaultSelection\n    });\n  }, [defaultSelection, editor]);\n  return null;\n}\n\nexport { AutoFocusPlugin };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,yBAAyB,QAAQ,uCAAuC;AACjF,SAASC,SAAS,QAAQ,OAAO;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,eAAeA,CAAC;EACvBC;AACF,CAAC,EAAE;EACD,MAAM,CAACC,MAAM,CAAC,GAAGJ,yBAAyB,CAAC,CAAC;EAC5CC,SAAS,CAAC,MAAM;IACdG,MAAM,CAACC,KAAK,CAAC,MAAM;MACjB;MACA;MACA;MACA;MACA,MAAMC,aAAa,GAAGC,QAAQ,CAACD,aAAa;MAC5C,MAAME,WAAW,GAAGJ,MAAM,CAACK,cAAc,CAAC,CAAC;MAC3C,IAAID,WAAW,KAAK,IAAI,KAAKF,aAAa,KAAK,IAAI,IAAI,CAACE,WAAW,CAACE,QAAQ,CAACJ,aAAa,CAAC,CAAC,EAAE;QAC5F;QACAE,WAAW,CAACH,KAAK,CAAC;UAChBM,aAAa,EAAE;QACjB,CAAC,CAAC;MACJ;IACF,CAAC,EAAE;MACDR;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACA,gBAAgB,EAAEC,MAAM,CAAC,CAAC;EAC9B,OAAO,IAAI;AACb;AAEA,SAASF,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}