{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BIT1\\\\IdeaProjects\\\\customer-inquiry-system\\\\frontend\\\\src\\\\pages\\\\dashboard\\\\DashBoard.js\";\nimport React, { Component } from 'react';\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass DashBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {\n        chart: {\n          id: 'pobluesky-dashboard'\n        },\n        legend: {\n          show: false\n        },\n        dataLabels: {\n          offsetX: 0,\n          offsetY: 0,\n          style: {\n            fontSize: '24px',\n            fontFamily: 'Helvetica, Arial, sans-serif',\n            fontWeight: 'bold',\n            colors: ['#ffffff']\n          }\n        },\n        plotOptions: {\n          bar: {\n            horizontal: true,\n            borderRadius: 24,\n            borderRadiusApplication: 'end',\n            // Whether to apply border-radius \"around\" both ends or only to single \"end\"\n            borderRadiusWhenStacked: 'last',\n            // Whether to apply border-radius to all bars or only to the data-set that is drawn last (all / last)\n            // columnWidth: '70%', // In column charts, columnWidth is the percentage of the available width in the grid-rect. 0 ~ 100%\n            barHeight: '80%',\n            // In horizontal bar charts, barHeight is the percentage of the available height in the grid-rect.  0 ~ 100%\n            distributed: true,\n            // Turn this option to make the bars discrete. Each value indicates one bar per series.\n            // rangeBarOverlap: true, // In a range-Bar / timeline chart, the bars should overlap over each other instead of stacking if this option is enabled.\n            // rangeBarGroupRows: false, // In a multi-series range-Bar / timeline chart, group rows (horizontal bars) together instead of stacking up. Helpful when there are no overlapping rows but distinct values.\n            // hideZeroBarsWhenGrouped: true, // In a non-stacked (grouped or clustered) bar chart, do not occupy space for those bars whose value is zero.\n            // isDumbbell: false, // In a rangebar chart, add dots at the starting and ending shape of the bar.\n            // dumbbellColors: undefined, // When dumbbell chart is enabled, use this option to set custom colors for the dots at the starting and ending shape.\n            // isFunnel: false, // Turn this option on to create a Funnel chart.\n            // isFunnel3d: true, // Give a 3d look to the funnel chart by adding shadows below each bar.\n            colors: {\n              ranges: [{\n                from: 0,\n                // Value indicating range’s upper limit\n                to: 0,\n                // Value indicating range’s lower limit\n                color: 'undefined' // Color to fill the range with\n              }],\n              backgroundBarColors: [],\n              backgroundBarOpacity: 1,\n              backgroundBarRadius: 0\n            },\n            dataLabels: {\n              position: 'center'\n            }\n          }\n        },\n        xaxis: {\n          labels: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          axisBorder: {\n            show: false\n          },\n          categories: ['열연', '후판', '표면처리', '자동차'],\n          type: 'category' // category, datetime, numeric\n        }\n      },\n      series: [{\n        name: 'pobluesky',\n        data: [91, 75, 60, 40]\n      }]\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mixed-chart\",\n          children: /*#__PURE__*/_jsxDEV(Chart, {\n            options: this.state.options,\n            series: this.state.series,\n            type: \"bar\",\n            width: \"500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default DashBoard;","map":{"version":3,"names":["React","Component","Chart","jsxDEV","_jsxDEV","DashBoard","constructor","props","state","options","chart","id","legend","show","dataLabels","offsetX","offsetY","style","fontSize","fontFamily","fontWeight","colors","plotOptions","bar","horizontal","borderRadius","borderRadiusApplication","borderRadiusWhenStacked","barHeight","distributed","ranges","from","to","color","backgroundBarColors","backgroundBarOpacity","backgroundBarRadius","position","xaxis","labels","axisTicks","axisBorder","categories","type","series","name","data","render","children","className","width","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/BIT1/IdeaProjects/customer-inquiry-system/frontend/src/pages/dashboard/DashBoard.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport Chart from 'react-apexcharts';\r\n\r\nclass DashBoard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            options: {\r\n                chart: {\r\n                    id: 'pobluesky-dashboard',\r\n                },\r\n                legend: {\r\n                    show: false,\r\n                },\r\n                dataLabels: {\r\n                    offsetX: 0,\r\n                    offsetY: 0,\r\n                    style: {\r\n                        fontSize: '24px',\r\n                        fontFamily: 'Helvetica, Arial, sans-serif',\r\n                        fontWeight: 'bold',\r\n                        colors: ['#ffffff'],\r\n                    },\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                        horizontal: true,\r\n                        borderRadius: 24,\r\n                        borderRadiusApplication: 'end', // Whether to apply border-radius \"around\" both ends or only to single \"end\"\r\n                        borderRadiusWhenStacked: 'last', // Whether to apply border-radius to all bars or only to the data-set that is drawn last (all / last)\r\n                        // columnWidth: '70%', // In column charts, columnWidth is the percentage of the available width in the grid-rect. 0 ~ 100%\r\n                        barHeight: '80%', // In horizontal bar charts, barHeight is the percentage of the available height in the grid-rect.  0 ~ 100%\r\n                        distributed: true, // Turn this option to make the bars discrete. Each value indicates one bar per series.\r\n                        // rangeBarOverlap: true, // In a range-Bar / timeline chart, the bars should overlap over each other instead of stacking if this option is enabled.\r\n                        // rangeBarGroupRows: false, // In a multi-series range-Bar / timeline chart, group rows (horizontal bars) together instead of stacking up. Helpful when there are no overlapping rows but distinct values.\r\n                        // hideZeroBarsWhenGrouped: true, // In a non-stacked (grouped or clustered) bar chart, do not occupy space for those bars whose value is zero.\r\n                        // isDumbbell: false, // In a rangebar chart, add dots at the starting and ending shape of the bar.\r\n                        // dumbbellColors: undefined, // When dumbbell chart is enabled, use this option to set custom colors for the dots at the starting and ending shape.\r\n                        // isFunnel: false, // Turn this option on to create a Funnel chart.\r\n                        // isFunnel3d: true, // Give a 3d look to the funnel chart by adding shadows below each bar.\r\n                        colors: {\r\n                            ranges: [\r\n                                {\r\n                                    from: 0, // Value indicating range’s upper limit\r\n                                    to: 0, // Value indicating range’s lower limit\r\n                                    color: 'undefined', // Color to fill the range with\r\n                                },\r\n                            ],\r\n                            backgroundBarColors: [],\r\n                            backgroundBarOpacity: 1,\r\n                            backgroundBarRadius: 0,\r\n                        },\r\n                        dataLabels: {\r\n                            position: 'center',\r\n                        },\r\n                    },\r\n                },\r\n                xaxis: {\r\n                    labels: { show: false },\r\n                    axisTicks: { show: false },\r\n                    axisBorder: { show: false },\r\n                    categories: ['열연', '후판', '표면처리', '자동차'],\r\n                    type: 'category', // category, datetime, numeric\r\n                },\r\n            },\r\n            series: [\r\n                {\r\n                    name: 'pobluesky',\r\n                    data: [91, 75, 60, 40],\r\n                },\r\n            ],\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"mixed-chart\">\r\n                        <Chart options={this.state.options} series={this.state.series} type=\"bar\" width=\"500\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DashBoard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,SAAS,SAASJ,SAAS,CAAC;EAC9BK,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAEZ,IAAI,CAACC,KAAK,GAAG;MACTC,OAAO,EAAE;QACLC,KAAK,EAAE;UACHC,EAAE,EAAE;QACR,CAAC;QACDC,MAAM,EAAE;UACJC,IAAI,EAAE;QACV,CAAC;QACDC,UAAU,EAAE;UACRC,OAAO,EAAE,CAAC;UACVC,OAAO,EAAE,CAAC;UACVC,KAAK,EAAE;YACHC,QAAQ,EAAE,MAAM;YAChBC,UAAU,EAAE,8BAA8B;YAC1CC,UAAU,EAAE,MAAM;YAClBC,MAAM,EAAE,CAAC,SAAS;UACtB;QACJ,CAAC;QACDC,WAAW,EAAE;UACTC,GAAG,EAAE;YACDC,UAAU,EAAE,IAAI;YAChBC,YAAY,EAAE,EAAE;YAChBC,uBAAuB,EAAE,KAAK;YAAE;YAChCC,uBAAuB,EAAE,MAAM;YAAE;YACjC;YACAC,SAAS,EAAE,KAAK;YAAE;YAClBC,WAAW,EAAE,IAAI;YAAE;YACnB;YACA;YACA;YACA;YACA;YACA;YACA;YACAR,MAAM,EAAE;cACJS,MAAM,EAAE,CACJ;gBACIC,IAAI,EAAE,CAAC;gBAAE;gBACTC,EAAE,EAAE,CAAC;gBAAE;gBACPC,KAAK,EAAE,WAAW,CAAE;cACxB,CAAC,CACJ;cACDC,mBAAmB,EAAE,EAAE;cACvBC,oBAAoB,EAAE,CAAC;cACvBC,mBAAmB,EAAE;YACzB,CAAC;YACDtB,UAAU,EAAE;cACRuB,QAAQ,EAAE;YACd;UACJ;QACJ,CAAC;QACDC,KAAK,EAAE;UACHC,MAAM,EAAE;YAAE1B,IAAI,EAAE;UAAM,CAAC;UACvB2B,SAAS,EAAE;YAAE3B,IAAI,EAAE;UAAM,CAAC;UAC1B4B,UAAU,EAAE;YAAE5B,IAAI,EAAE;UAAM,CAAC;UAC3B6B,UAAU,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,CAAC;UACvCC,IAAI,EAAE,UAAU,CAAE;QACtB;MACJ,CAAC;MACDC,MAAM,EAAE,CACJ;QACIC,IAAI,EAAE,WAAW;QACjBC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;MACzB,CAAC;IAET,CAAC;EACL;EAEAC,MAAMA,CAAA,EAAG;IACL,oBACI3C,OAAA;MAAA4C,QAAA,eACI5C,OAAA;QAAK6C,SAAS,EAAC,KAAK;QAAAD,QAAA,eAChB5C,OAAA;UAAK6C,SAAS,EAAC,aAAa;UAAAD,QAAA,eACxB5C,OAAA,CAACF,KAAK;YAACO,OAAO,EAAE,IAAI,CAACD,KAAK,CAACC,OAAQ;YAACmC,MAAM,EAAE,IAAI,CAACpC,KAAK,CAACoC,MAAO;YAACD,IAAI,EAAC,KAAK;YAACO,KAAK,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEd;AACJ;AAEA,eAAejD,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}